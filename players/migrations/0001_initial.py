# Generated by Django 4.2.7 on 2025-07-20 17:49

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(blank=True, help_text='Player ranking', null=True)),
                ('name', models.CharField(db_index=True, help_text='Player name', max_length=100)),
                ('nation', models.CharField(db_index=True, help_text='Player nationality', max_length=50)),
                ('position', models.CharField(db_index=True, help_text='Player position (e.g., FW, MF, DF, GK)', max_length=20)),
                ('squad', models.CharField(db_index=True, help_text='Current club/team', max_length=50)),
                ('competition', models.CharField(db_index=True, help_text='League competition', max_length=50)),
                ('age', models.FloatField(db_index=True, help_text='Player age', validators=[django.core.validators.MinValueValidator(15.0), django.core.validators.MaxValueValidator(45.0)])),
                ('born_year', models.IntegerField(help_text='Birth year', validators=[django.core.validators.MinValueValidator(1960), django.core.validators.MaxValueValidator(2010)])),
                ('matches_played', models.IntegerField(default=0, help_text='Matches played')),
                ('starts', models.IntegerField(default=0, help_text='Matches started')),
                ('minutes', models.IntegerField(default=0, help_text='Total minutes played')),
                ('minutes_per_90', models.FloatField(default=0.0, help_text='90-minute periods played')),
                ('goals', models.IntegerField(db_index=True, default=0, help_text='Goals scored')),
                ('assists', models.IntegerField(db_index=True, default=0, help_text='Assists')),
                ('goals_assists', models.IntegerField(default=0, help_text='Goals + Assists')),
                ('goals_minus_penalties', models.IntegerField(default=0, help_text='Goals excluding penalties')),
                ('penalties_scored', models.IntegerField(default=0, help_text='Penalty goals')),
                ('penalties_attempted', models.IntegerField(default=0, help_text='Penalty attempts')),
                ('yellow_cards', models.IntegerField(default=0, help_text='Yellow cards')),
                ('red_cards', models.IntegerField(default=0, help_text='Red cards')),
                ('expected_goals', models.FloatField(default=0.0, help_text='Expected goals (xG)')),
                ('expected_goals_non_penalty', models.FloatField(default=0.0, help_text='Non-penalty expected goals')),
                ('expected_assists', models.FloatField(default=0.0, help_text='Expected assists (xAG)')),
                ('shots', models.IntegerField(default=0, help_text='Total shots')),
                ('shots_on_target', models.IntegerField(default=0, help_text='Shots on target')),
                ('shots_on_target_percentage', models.FloatField(default=0.0, help_text='Shot accuracy %')),
                ('shots_per_90', models.FloatField(default=0.0, help_text='Shots per 90 minutes')),
                ('shots_on_target_per_90', models.FloatField(default=0.0, help_text='Shots on target per 90')),
                ('passes_completed', models.IntegerField(default=0, help_text='Passes completed')),
                ('passes_attempted', models.IntegerField(default=0, help_text='Passes attempted')),
                ('pass_completion_percentage', models.FloatField(default=0.0, help_text='Pass completion %')),
                ('key_passes', models.IntegerField(default=0, help_text='Key passes')),
                ('tackles', models.IntegerField(default=0, help_text='Tackles')),
                ('tackles_won', models.IntegerField(default=0, help_text='Tackles won')),
                ('interceptions', models.IntegerField(default=0, help_text='Interceptions')),
                ('blocks', models.IntegerField(default=0, help_text='Blocks')),
                ('clearances', models.IntegerField(default=0, help_text='Clearances')),
                ('touches', models.IntegerField(default=0, help_text='Total touches')),
                ('dribbles_attempted', models.IntegerField(default=0, help_text='Dribbles attempted')),
                ('dribbles_successful', models.IntegerField(default=0, help_text='Successful dribbles')),
                ('dribble_success_percentage', models.FloatField(default=0.0, help_text='Dribble success %')),
                ('goals_against', models.FloatField(blank=True, help_text='Goals against (GK)', null=True)),
                ('goals_against_per_90', models.FloatField(blank=True, help_text='Goals against per 90 (GK)', null=True)),
                ('shots_faced', models.IntegerField(blank=True, help_text='Shots faced (GK)', null=True)),
                ('saves', models.IntegerField(blank=True, help_text='Saves made (GK)', null=True)),
                ('save_percentage', models.FloatField(blank=True, help_text='Save percentage (GK)', null=True)),
                ('clean_sheets', models.IntegerField(blank=True, help_text='Clean sheets (GK)', null=True)),
                ('progressive_carries', models.IntegerField(default=0, help_text='Progressive carries')),
                ('progressive_passes', models.IntegerField(default=0, help_text='Progressive passes')),
                ('progressive_receptions', models.IntegerField(default=0, help_text='Progressive pass receptions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'players',
                'ordering': ['-goals', '-assists', 'name'],
                'indexes': [models.Index(fields=['position', 'competition'], name='players_positio_962e5e_idx'), models.Index(fields=['squad', 'competition'], name='players_squad_db98d7_idx'), models.Index(fields=['goals', 'assists'], name='players_goals_538b26_idx'), models.Index(fields=['age', 'position'], name='players_age_6de6a5_idx'), models.Index(fields=['nation', 'position'], name='players_nation_5c4598_idx')],
            },
        ),
    ]
